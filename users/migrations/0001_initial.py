# Generated by Django 5.0.1 on 2025-10-10 14:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Traveler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name_kr', models.CharField(max_length=20, verbose_name='한글 성')),
                ('first_name_kr', models.CharField(max_length=30, verbose_name='한글 이름')),
                ('first_name_en', models.CharField(blank=True, max_length=50, verbose_name='영문 First Name')),
                ('last_name_en', models.CharField(blank=True, max_length=50, verbose_name='영문 Last Name')),
                ('birth_date', models.DateField(verbose_name='생년월일')),
                ('gender', models.CharField(choices=[('M', '남'), ('F', '여')], max_length=1, verbose_name='성별')),
                ('phone', models.CharField(max_length=20, verbose_name='연락처')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='이메일')),
                ('address', models.TextField(blank=True, verbose_name='주소')),
                ('country', models.CharField(default='대한민국', max_length=50, verbose_name='국가')),
                ('is_companion', models.BooleanField(default=False, verbose_name='동행 여부')),
                ('companion_names', models.CharField(blank=True, help_text='예: 홍길동, 김원주', max_length=200, verbose_name='동행인')),
                ('proxy_booking', models.BooleanField(default=False, verbose_name='대리 예약 여부')),
                ('passport_number', models.CharField(blank=True, max_length=20, verbose_name='여권 번호')),
                ('passport_expiry', models.DateField(blank=True, null=True, verbose_name='여권 만료일')),
                ('passport_verified', models.BooleanField(default=False, verbose_name='여권정보 검증')),
                ('identity_verified', models.BooleanField(default=False, verbose_name='신분확인 검증')),
                ('booking_verified', models.BooleanField(default=False, verbose_name='예약 확인')),
                ('total_amount', models.IntegerField(default=0, verbose_name='총 금액(원)')),
                ('paid_amount', models.IntegerField(default=0, verbose_name='결제 금액(원)')),
                ('insurance_subscribed', models.BooleanField(default=False, verbose_name='여행자 보험 가입')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '여행자',
                'verbose_name_plural': '여행자 목록',
                'ordering': ['last_name_kr', 'first_name_kr'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name_kr', models.CharField(blank=True, max_length=10, verbose_name='한글 이름')),
                ('last_name_kr', models.CharField(blank=True, max_length=10, verbose_name='한글 성')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='연락처')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '직원',
                'verbose_name_plural': '직원 목록',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
